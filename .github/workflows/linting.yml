name: Run linting
on: push

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Config Github URL to download Private Repo
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_ACCESS_TOKEN }}
        run: git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics

      - name: Display errors and warnings from flake8
        uses: TrueBrain/actions-flake8@master

      - name: Code Quality
        run: poetry run black . --check
